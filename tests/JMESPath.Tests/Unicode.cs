// <auto-generated /> 
#nullable enable

using JMESPath;

public class Unicode
{

    [Theory]
    [InlineData(
"""
foo[]."✓"
""",
"""
[
  "\u2713",
  "\u2717"
]
""")]
    public void Test_1(string expression, string expectedResult)
    {
        // Arrange 
        string? given =
"""
{
  "foo": [
    {
      "\u2713": "\u2713"
    },
    {
      "\u2713": "\u2717"
    }
  ]
}
""";

        // Act 
        string? result = JMESPathSearcher.Search(expression, given);
        
        // Assert
        Assert.Equal(result, expectedResult);
    }

    [Theory]
    [InlineData(
"""
"☯"
""",
"""
true
""")]
    public void Test_2(string expression, string expectedResult)
    {
        // Arrange 
        string? given =
"""
{
  "\u262F": true
}
""";

        // Act 
        string? result = JMESPathSearcher.Search(expression, given);
        
        // Assert
        Assert.Equal(result, expectedResult);
    }

    [Theory]
    [InlineData(
"""
"♪♫•*¨*•.¸¸❤¸¸.•*¨*•♫♪"
""",
"""
true
""")]
    public void Test_3(string expression, string expectedResult)
    {
        // Arrange 
        string? given =
"""
{
  "\u266A\u266B\u2022*\u00A8*\u2022.\u00B8\u00B8\u2764\u00B8\u00B8.\u2022*\u00A8*\u2022\u266B\u266A": true
}
""";

        // Act 
        string? result = JMESPathSearcher.Search(expression, given);
        
        // Assert
        Assert.Equal(result, expectedResult);
    }

    [Theory]
    [InlineData(
"""
"☃"
""",
"""
true
""")]
    public void Test_4(string expression, string expectedResult)
    {
        // Arrange 
        string? given =
"""
{
  "\u2603": true
}
""";

        // Act 
        string? result = JMESPathSearcher.Search(expression, given);
        
        // Assert
        Assert.Equal(result, expectedResult);
    }

}